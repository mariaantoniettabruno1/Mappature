!(function(e) {
  (e.fn.jOrgChart = function(d) {
    var n = e.extend({}, e.fn.jOrgChart.defaults, d),
      t = e(n.chartElement);
    $this = e(this);
    var r = e("<div class='" + n.chartClass + "'/>");
    $this.is("ul")
      ? a($this.find("li:first"), r, 0, n)
      : $this.is("li") && a($this, r, 0, n),
      t.append(r),
      n.dragAndDrop &&
        (e("div.node").draggable({
          cursor: "move",
          distance: 40,
          helper: "clone",
          opacity: 0.8,
          revert: "invalid",
          revertDuration: 100,
          snap: "div.node.expanded",
          snapMode: "inner",
          stack: "div.node"
        }),
        e("div.node").droppable({
          accept: ".node",
          activeClass: "drag-active",
          hoverClass: "drop-hover"
        }),
        e("div.node").bind("dragstart", function(d, a) {
          e(this)
            .parentsUntil(".node-container")
            .find("*")
            .filter(".node")
            .droppable({ disabled: !0 });
        }),
        e("div.node").bind("dragstop", function(d, a) {
          e(n.chartElement)
            .children()
            .remove(),
            $this.jOrgChart(n);
        }),
        e("div.node").bind("drop", function(d, a) {
          var n = e(this).data("tree-node"),
            t = $this.find("li").filter(function() {
              return e(this).data("tree-node") === n;
            }),
            r = t.children("ul"),
            l = a.draggable.data("tree-node"),
            i = $this.find("li").filter(function() {
              return e(this).data("tree-node") === l;
            }),
            s = i.parent("ul");
          if (r.length > 0) {
            r.append(i);
            var o = e("#org").html();
            e("#chart_html").val(o);
          } else {
            t.append("<ul></ul>"), t.children("ul").append(i);
            o = e("#org").html();
            e("#chart_html").val(o);
          }
          0 === s.children().length && s.remove();
        }));
  }),
    (e.fn.jOrgChart.defaults = {
      chartElement: "body",
      depth: -1,
      chartClass: "jOrgChart",
      dragAndDrop: !1
    });
  var d = 0;
  function a(n, t, r, l) {
    var i,
      s = e("<table cellpadding='0' cellspacing='0' border='0'/>"),
      o = e("<tbody/>"),
      p = e("<tr/>").addClass("node-cells"),
      c = e("<td/>")
        .addClass("node-cell")
        .attr("colspan", 2),
      h = n.children("ul:first").children("li");
    h.length > 1 && c.attr("colspan", 2 * h.length);
    var v = n
      .clone()
      .children("ul,li")
      .remove()
      .end()
      .html();
    if (
      (d++,
      n.data("tree-node", d),
      (i = e("<div>")
        .addClass("node")
        .data("tree-node", d)
        .append(v)),
      c.append(i),
      p.append(c),
      o.append(p),
      h.length > 0)
    ) {
      if (-1 == l.depth || r + 1 < l.depth) {
        var f = e("<tr/>"),
          u = e("<td/>").attr("colspan", 2 * h.length);
        f.append(u),
          ($downLine = e("<div></div>").addClass("line down")),
          u.append($downLine),
          o.append(f);
        var g = e("<tr/>");
        h.each(function() {
          var d = e("<td>&nbsp;</td>").addClass("line left top"),
            a = e("<td>&nbsp;</td>").addClass("line right top");
          g.append(d).append(a);
        }),
          g
            .find("td:first")
            .removeClass("top")
            .end()
            .find("td:last")
            .removeClass("top"),
          o.append(g);
        var C = e("<tr/>");
        h.each(function() {
          var d = e("<td class='node-container'/>");
          d.attr("colspan", 2), a(e(this), d, r + 1, l), C.append(d);
        });
      }
      o.append(C);
    }
    if (null != n.attr("class")) {
      var b = n.attr("class").split(/\s+/);
      e.each(b, function(e, d) {
        "collapsed" == d
          ? (console.log(n),
            p.nextAll("tr").css("visibility", "hidden"),
            p.removeClass("expanded"),
            p.addClass("contracted"),
            i.css("cursor", "s-resize"))
          : i.addClass(d);
      });
    }
    s.append(o), t.append(s);
  }
})(jQuery);
